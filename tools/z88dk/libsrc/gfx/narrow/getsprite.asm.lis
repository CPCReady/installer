/tmp/tmpXXfe4s87.asm:
     1                          MODULE getsprite_asm
     2                          LINE 0, "getsprite.asm"
getsprite.asm:
                                
     1                          ;
     2                          ; Getsprite - Picks up a sprite from display with the given size
     3                          ; by Stefano Bodrato - Jan 2001
     4                          ; Apr 2002 - Fixed.  (Long time, I know...)
     5                          ;
     6                          ; The original putsprite code is by Patrick Davidson (TI 85)
     7                          ;
     8                          ; Generic version (just a bit slow)
     9                          ;
    10                          ;
    11                          ; $Id: getsprite.asm $
    12                          ;
    13                          
    14                          
    15                            IF    !__CPU_INTEL__&!__CPU_GBZ80__
    16                                  SECTION smc_clib
    17                                  PUBLIC  getsprite
    18                                  PUBLIC  _getsprite
    19                                  PUBLIC  ___getsprite
    20                                  PUBLIC  getsprite_sub
    21                                  EXTERN  pixeladdress
    22                                  EXTERN  swapgfxbk
    23                                  EXTERN  __graphics_end
    24                          
    25                                  INCLUDE "graphics/grafix.inc"
    26                          
    27                          ; __gfx_coords: d,e (vert-horz)
    28                          ; sprite: (ix)
    29                          
    30                          
    31                          
    32                          
    33                          getsprite:
    34                          _getsprite:
    35                          ___getsprite:
    36                          
    37                                  push    ix
    38                          
    39                                  ld      hl, 4
    40                                  add     hl, sp
    41                                  ld      e, (hl)
    42                                  inc     hl
    43                                  ld      d, (hl)                 ; sprite address
    44                                  push    de
    45                                  pop     ix
    46                          
    47                                  inc     hl
    48                                  ld      e, (hl)
    49                                  inc     hl
    50                                  inc     hl
    51                                  ld      d, (hl)                 ; x and y __gfx_coords
    52                          
    53                          
    54                          getsprite_sub:
    55                                  ld      h, d
    56                                  ld      l, e
    57                          
    58                                  ld      (actcoord), hl          ; save current coordinates
    59                          
    60                              IF  NEED_swapgfxbk=1
    61                                  call    swapgfxbk
    62                              ENDIF
    63                                  call    pixeladdress
    64                                  xor     7
    65                          
    66                                  ld      (_smc+1), a
    67                          
    68                                  ld      h, d
    69                                  ld      l, e
    70                          
    71                                  ld      e, (ix+0)
    72                                  ld      b, (ix+1)
    73                          
    74                                  dec     e
    75                                  srl     e
    76                                  srl     e
    77                                  srl     e
    78                                  inc     e                       ; INT ((width-1)/8+1)
    79                          
    80                          _oloop: push    bc                      ;Save # of rows
    81                                  push    de                      ;Save # of bytes per row
    82                          
    83                          _iloop2:
    84                                  ld      a, (hl)
    85                                  inc     hl
    86                                  ld      d, (hl)
    87                          
    88                          _smc:   ld      b, 1                    ;Load pixel position
    89                                  inc     b
    90                                  dec     b
    91                                  jr      z, zpos
    92                          
    93                          _iloop:
    94                                  rl      d
    95                                  rl      a
    96                                  djnz    _iloop
    97                          
    98                          zpos:
    99                                  ld      (ix+2), a
   100                                  inc     ix
   101                          
   102                                  dec     e
   103                                  jr      nz, _iloop2
   104                          
   105                              ; ---------
   106                                  push    de
   107                                  ld      hl, (actcoord)
   108                                  inc     l
   109                                  ld      (actcoord), hl
   110                                  call    pixeladdress
   111                                  ld      h, d
   112                                  ld      l, e
   113                                  pop     de
   114                              ; ---------
   115                          
   116                                  pop     de
   117                                  pop     bc                      ;Restore data
   118                                  djnz    _oloop
   119                          
   120                              IF  NEED_swapgfxbk
   121                                  jp      __graphics_end
   122                              ELSE
   123                                IF    !__CPU_INTEL__&!__CPU_GBZ80__
   124                                  pop     ix
   125                                ENDIF
   126                                  ret
   127                              ENDIF
   128                                  SECTION bss_graphics
   129                          actcoord:
   130                                  defw    0
   131                            ENDIF
   132                          
