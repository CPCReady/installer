/tmp/tmpXXyCrvlG.asm:
     1                          MODULE bkrestore2_asm
     2                          LINE 0, "bkrestore2.asm"
bkrestore2.asm:
                                
     1                          ;
     2                          ;    Fast background save
     3                          ;
     4                          ;    Generic version (just a bit slow)
     5                          ;
     6                          ;    $Id: bkrestore2.asm $
     7                          ;
     8                          
     9                            IF    !__CPU_INTEL__&!__CPU_GBZ80__
    10                                  SECTION code_clib
    11                          
    12                          
    13                                  EXTERN  putsprite
    14                                  EXTERN  asm_clga
    15                          
    16                                  PUBLIC  bkrestore
    17                                  PUBLIC  _bkrestore
    18                                  PUBLIC  bkrestore_fastcall
    19                                  PUBLIC  _bkrestore_fastcall
    20                          
    21                          bkrestore:
    22                          _bkrestore:
    23                                  pop     de
    24                                  pop     hl
    25                                  push    hl
    26                                  push    de
    27                          
    28                          bkrestore_fastcall:
    29                          _bkrestore_fastcall:
    30                          
    31                          
    32                              ; __FASTCALL__ !!   HL = sprite address
    33                          
    34                                  inc     hl                      ; skip first X xs
    35                                  inc     hl                      ; skip first Y ys
    36                          
    37                          ; spr_and:  166+47*256 // CPL - AND (HL)
    38                          ; spr_or:   182 // OR (HL)
    39                          
    40                                  ld      de, 182                 ; spr_or
    41                                  push    de
    42                          
    43                                  ld      e, (hl)                 ; x pos
    44                                  inc     hl
    45                                  ld      a, e
    46                              ;ld    d,0    <- d=0 already
    47                                  push    de
    48                          
    49                                  ld      e, (hl)                 ; Y pos
    50                                  inc     hl
    51                                  push    de
    52                          
    53                                  push    hl                      ; sprite addr
    54                          
    55                                  ld      b, (hl)                 ; saved X sz
    56                                  inc     hl
    57                                  ld      c, (hl)                 ; saved Y sz
    58                          
    59                                  ld      h, a                    ; X
    60                                  ld      l, e                    ; Y
    61                          
    62                              ; HL    = (x,y)
    63                              ; BC    = (width,heigth)
    64                                  call    asm_clga
    65                          
    66                                  call    putsprite
    67                          
    68                                  pop     hl
    69                                  pop     de
    70                                  pop     de
    71                                  pop     de
    72                          
    73                                  ret
    74                            ENDIF
    75                          
