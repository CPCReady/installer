/tmp/tmpXXrWCZzT.asm:
     1                          MODULE getsprite2_asm
     2                          LINE 0, "getsprite2.asm"
getsprite2.asm:
                                
     1                          ;
     2                          ; Getsprite - Picks up a sprite from display with the given size
     3                          ; by Stefano Bodrato - 2019
     4                          ;
     5                          ; The original putsprite code is by Patrick Davidson (TI 85)
     6                          ;
     7                          ; Generic version (just a bit slow)
     8                          ;
     9                          ;
    10                          ; $Id: getsprite2.asm $
    11                          ;
    12                          
    13                          
    14                            IF    !__CPU_INTEL__&!__CPU_GBZ80__
    15                                  SECTION smc_clib
    16                          
    17                                  PUBLIC  getsprite
    18                                  PUBLIC  _getsprite
    19                                  PUBLIC  ___getsprite
    20                                  PUBLIC  getsprite_sub
    21                          
    22                                  EXTERN  pointxy
    23                          
    24                                  EXTERN  swapgfxbk
    25                                  EXTERN  __graphics_end
    26                                  INCLUDE "graphics/grafix.inc"
    27                          
    28                          
    29                          ; __gfx_coords: d,e (vert-horz)
    30                          ; sprite: (ix)
    31                          
    32                          
    33                          
    34                          getsprite:
    35                          _getsprite:
    36                          ___getsprite:
    37                          
    38                                  push    ix
    39                          
    40                                  ld      hl, 4
    41                                  add     hl, sp
    42                                  ld      e, (hl)
    43                                  inc     hl
    44                                  ld      d, (hl)                 ; sprite address
    45                                  push    de
    46                                  pop     ix
    47                          
    48                                  inc     hl
    49                                  ld      e, (hl)
    50                                  inc     hl
    51                                  inc     hl
    52                                  ld      d, (hl)                 ; x and y __gfx_coords
    53                          
    54                          
    55                          getsprite_sub:
    56                                  ld      h, d                    ; X
    57                                  ld      l, e                    ; Y
    58                          
    59                                  dec     h
    60                                  ld      c, h                    ; keep copy of X position
    61                          
    62                              IF  NEED_swapgfxbk=1
    63                                  call    swapgfxbk
    64                              ENDIF
    65                          
    66                                  ld      b, (ix+0)               ; x size (iloop)
    67                                  ld      d, (ix+1)               ; y size (oloop)
    68                          
    69                                  ld      e, $fe                  ; trailing byte for "set 7,.." instruction
    70                          
    71                                  ld      a, 7
    72                                  and     b                       ; SMC for an extra the byte boundary check if the sprite edge is not exactly on a byte
    73                                  jr      z, skip_inc             ; NOP
    74                                  ld      a, $23                  ; INC IX
    75                          skip_inc:
    76                                  ld      (inc_smc+1), a
    77                                  inc     b
    78                          
    79                          oloop:
    80                                  xor     a
    81                                  ld      (ix+2), a
    82                                  push    de
    83                                  push    bc                      ; keep copy of counters
    84                          
    85                                  ld      (nopoint-1), a
    86                                  ld      e, a
    87                          
    88                          iloop:
    89                                  push    bc
    90                                  push    de
    91                                  push    hl
    92                                  call    pointxy
    93                                  pop     hl
    94                                  pop     de
    95                          
    96                                  jr      z, nopoint
    97                                  set     7, (ix+2)               ; SMC (23 T)
    98                          nopoint:
    99                          
   100                                  ld      a, e
   101                                  sub     8                       ; next bit (count 7 to 0)
   102                                  cp      $c6-8                   ; trailing byte for "set 0,.." instruction  (rightmost bit)
   103                                  jr      nc, next_bit
   104                          
   105                                  inc     ix                      ; next byte in the sprite data
   106                                  xor     a
   107                                  ld      (ix+2), a
   108                                  ld      a, $fe                  ; trailing byte for "set 0,.." instruction
   109                          
   110                          next_bit:
   111                                  ld      (nopoint-1), a
   112                                  ld      e, a
   113                          
   114                                  inc     h                       ; increment X
   115                          
   116                                  pop     bc                      ;
   117                                  djnz    iloop
   118                          
   119                                  ld      a, $fe                  ; trailing byte for "set 7,.." instruction
   120                                  cp      e
   121                                  jr      z, noinc
   122                          inc_smc:
   123                                  inc     ix                      ; next byte in the sprite data
   124                          noinc:
   125                          
   126                                  pop     bc                      ; restore counters
   127                                  pop     de
   128                          
   129                                  ld      h, c                    ; reset X
   130                                  inc     l                       ; increment Y
   131                          
   132                                  dec     d
   133                                  jr      nz, oloop
   134                          
   135                              IF  NEED_swapgfxbk
   136                                  jp      __graphics_end
   137                              ELSE
   138                                IF    !__CPU_INTEL__&!__CPU_GBZ80__
   139                                  pop     ix
   140                                ENDIF
   141                                  ret
   142                              ENDIF
   143                            ENDIF
   144                          
