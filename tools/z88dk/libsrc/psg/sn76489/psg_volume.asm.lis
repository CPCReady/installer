/tmp/tmpXXYUXg34.asm:
     1                          MODULE psg_volume_asm
     2                          LINE 0, "psg_volume.asm"
psg_volume.asm:
                                
     1                          	SECTION code_clib
     2                          
     3                          IF !__CPU_INTEL__ & !__CPU_RABBIT__ & !__CPU_GBZ80__
     4                          	PUBLIC	set_sound_volume
     5                          	PUBLIC	_set_sound_volume
     6                          	PUBLIC	___set_sound_volume
     7                          	PUBLIC	psg_volume
     8                          	PUBLIC	_psg_volume
     9                          	PUBLIC	___psg_volume
    10                          
    11                          ;	$Id: psg_volume.asm $
    12                          
    13                          ;==============================================================
    14                          ; void set_sound_volume(int channel, int volume)
    15                          ;==============================================================
    16                          ; Sets the sound volume for a given channel
    17                          ;==============================================================
    18                          
    19                          	INCLUDE	"sn76489.inc"
    20                          
    21                          .set_sound_volume
    22                          ._set_sound_volume
    23                          .___set_sound_volume
    24                          .psg_volume
    25                          ._psg_volume
    26                          .___psg_volume
    27                          
    28                          	ld	hl, 2
    29                          	add	hl, sp
    30                          	ld	e, (hl)		; E = Volume
    31                          	inc	hl
    32                          	inc 	hl
    33                          	ld	c, (hl)		; C = Channel
    34                          
    35                          	ld	a, e
    36                          	cpl			; The volume is actually an atenuation
    37                          	and	a, $0F
    38                          	ld	b, a		; Only the 4 lower bits are significant
    39                          
    40                          	ld	a, c
    41                          	rrc	a
    42                          	rrc	a
    43                          	rrc	a
    44                          	and	a, $60		; Puts the channel number in bits 5 and 6
    45                          
    46                          	or	a, $90
    47                          	or	a, b		; Prepares the first byte of the command
    48                          IF HAVE16bitbus
    49                              ld      bc,psgport
    50                              out     (c),a
    51                          ELSE
    52                              out	(psgport), a	; Sends it
    53                          IF PSGLatchPort
    54                              in a,(PSGLatchPort)
    55                          ENDIF
    56                          ENDIF
    57                          
    58                          	ret
    59                          ENDIF
    60                          
